name: Flutter CI/CD - Build and Release

on:
  push:
    branches:
      - master
    # We will not rely on tags anymore
    # Remove the 'tags' section from the push trigger.

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.0'

      - name: Install dependencies
        run: flutter pub get

      - name: Run unit tests
        run: flutter test

      # Extract version from pubspec.yaml
      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Check if Android Keystore is available
        id: android-keystore
        run: |
          if [[ -z "${{ secrets.ANDROID_KEYSTORE }}" ]]; then
            echo "ANDROID_KEYSTORE is missing, proceeding with unsigned APK build"
            echo "signing=false" >> $GITHUB_ENV
          else
            echo "ANDROID_KEYSTORE is present, proceeding with signed APK build"
            echo "signing=true" >> $GITHUB_ENV
          fi

      - name: Decode Android Keystore (base64) if present
        if: env.signing == 'true'
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > android/app/release-keystore.jks

      - name: Configure Android signing if present
        if: env.signing == 'true'
        run: |
          cat >> android/key.properties <<EOF
          storePassword=${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword=${{ secrets.KEY_PASSWORD }}
          keyAlias=${{ secrets.KEY_ALIAS }}
          storeFile=release-keystore.jks
          EOF

      - name: Build Android APK
        run: flutter build apk --release

      - name: Build Android App Bundle (AAB)
        run: flutter build appbundle --release

      - name: Build iOS IPA (unsigned)
        run: flutter build ipa --no-codesign

      # Use the extracted version for the GitHub release
      - name: Upload APK to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          files: build/app/outputs/flutter-apk/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.MYTOKEN }}

      - name: Upload AAB to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          files: build/app/outputs/bundle/release/app-release.aab
        env:
          GITHUB_TOKEN: ${{ secrets.MYTOKEN }}

      - name: Upload IPA to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          files: build/ios/ipa/*.ipa
        env:
          GITHUB_TOKEN: ${{ secrets.MYTOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          body: "Automated release for version ${{ env.VERSION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.MYTOKEN }}
